@startuml

interface InputView {
+ receiveInput(): GameInput
}

class RacingGameInputView {
+ receiveInput(): GameInput
}

class GameInput <<Data Class>> {
+ carNames: List<String>
+ numberOfRounds: Int
}

interface ResultView {
+ printResult(gameResult: GameResult)
}

class GameResult <<Data Class>> {
+ roundResults: List<RoundResult>
}

class RoundResult <<Data Class>> {
+ results: List<Car>
}

class RacingGameResultView implements ResultView {
- winnerFinder: WinnerFinder
+ printResult(gameResult: GameResult)
}

class WinnerFinder {
+ find(gameResult: GameResult): List<Car>
}

class Car {
+ name: String
+ position: Int
+ accelerate(fuel: Int)
}

class RacingGame {
+ input: GameInput
+ play(): GameResult
}

RacingGame *-left-> "*" Car

RacingGame -up-> GameInput
InputView -down-> GameInput
RacingGameInputView ..|> InputView

RacingGame -down-> GameResult
GameResult -left-> "*" RoundResult
RoundResult -left-> "*" Car
ResultView -up-> GameResult

RacingGameResultView -> WinnerFinder
@enduml