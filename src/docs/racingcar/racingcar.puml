@startuml

interface InputView {
+ receiveInput(): GameInput
}

class RacingGameInputView {
+ receiveInput(): GameInput
}

class GameInput <<Data Class>> {
+ carNames: List<String>
+ numberOfRounds: Int
}

interface ResultView {
+ printResult(gameResult: GameResult)
}

class GameResult <<Data Class>> {
+ roundResults: List<RoundResult>
+ winners: List<CarDto>
}

class RoundResult <<Data Class>> {
+ round: Int
+ results: List<CarDto>
}

class CarDto <<Data Class>> {
+ name: String
+ position: Int
}

class RacingGameResultView implements ResultView {
+ printResult(gameResult: GameResult)
}

class Car {
+ name: String
+ currentPosition: Int
+ accelerate(fuel: Int)
}

class RacingGame {
+ input: GameInput
+ run(): GameResult
}

RacingGame *-left-> "*" Car

RacingGame -up-> GameInput
InputView -down-> GameInput
RacingGameInputView ..|> InputView

RacingGame -down-> GameResult
GameResult -left-> "*" RoundResult
RoundResult --> "*" CarDto
GameResult --> "*" CarDto
ResultView -up-> GameResult

@enduml